{
  "title": "Introduction",
  "description": "Simplify authentication with copy-paste ready code. Lightweight, customizable, and entirely yours to control.\r",
  "published": true,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nThis is **NOT** an authentication library in the traditional sense. Instead, it's a set of ready-to-use authentication components that you can copy and paste into your projects, whether they use Next.js.\r\n\r\n**What do you mean by not a library?**\r\n\r\nIt means you don't need to install it as a dependency. AuthEz isn't distributed through npm. You simply take the code you need, integrate it into your app, and customize it as you see fit. This approach gives you complete control over both the authentication flow and the user experience.\r\n\r\n_Think of AuthEz as a toolkit you can adapt to build your own authentication solution, without unnecessary dependencies._\r\n\r\n## FAQ\r\n\r\n<Accordion type=\"multiple\">\r\n\r\n<AccordionItem value=\"faq-1\">\r\n\t<AccordionTrigger>\r\n\t\tWhy copy/paste and not packaged as a dependency?\r\n\t</AccordionTrigger>\r\n\t<AccordionContent>\r\nThe main goal of AuthEz is to give developers full control and flexibility. By copying the code directly into your project, you can customize it to your exact needs.\r\n\r\nThis approach avoids issues of tightly coupled styling and implementation that often come with packaged libraries. With AuthEz, the design and flow of authentication can be tailored entirely to your application's requirements.\r\n</AccordionContent>\r\n\r\n</AccordionItem>\r\n\r\n<AccordionItem value=\"faq-2\">\r\n  <AccordionTrigger>\r\n    Will this ever be released as an npm package?\r\n  </AccordionTrigger>\r\n  <AccordionContent>\r\n    No, AuthEz is designed to be fully customizable by each developer. It's meant\r\n    to be a foundational toolkit rather than a locked-in solution.\r\n  </AccordionContent>\r\n</AccordionItem>\r\n\r\n<AccordionItem value=\"faq-3\">\r\n  <AccordionTrigger>Which frameworks are supported?</AccordionTrigger>\r\n  <AccordionContent>\r\n    AuthEz is designed to work with any framework that supports JavaScript and\r\n    Express-based servers, including Next.js.\r\n  </AccordionContent>\r\n</AccordionItem>\r\n\r\n<AccordionItem value=\"faq-4\">\r\n  <AccordionTrigger>Can I use this in my project?</AccordionTrigger>\r\n  <AccordionContent>\r\n    Absolutely. AuthEz is free for personal and commercial projects. No\r\n    attribution is required, but feel free to share your projects with usâ€” we'd\r\n    love to see how you use AuthEz!\r\n  </AccordionContent>\r\n</AccordionItem>\r\n\r\n</Accordion>\r\n",
    "code": "var Component=(()=>{var y=Object.create;var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var w=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),A=(n,e)=>{for(var o in e)c(n,o,{get:e[o],enumerable:!0})},d=(n,e,o,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of f(e))!b.call(n,i)&&i!==o&&c(n,i,{get:()=>e[i],enumerable:!(r=m(e,i))||r.enumerable});return n};var x=(n,e,o)=>(o=n!=null?y(g(n)):{},d(e||!n||!n.__esModule?c(o,\"default\",{value:n,enumerable:!0}):o,n)),v=n=>d(c({},\"__esModule\",{value:!0}),n);var h=w((E,l)=>{l.exports=_jsx_runtime});var j={};A(j,{default:()=>p,frontmatter:()=>k});var t=x(h()),k={title:\"Introduction\",description:\"Simplify authentication with copy-paste ready code. Lightweight, customizable, and entirely yours to control.\"};function u(n){let e={a:\"a\",em:\"em\",h2:\"h2\",p:\"p\",span:\"span\",strong:\"strong\",...n.components},{Accordion:o,AccordionContent:r,AccordionItem:i,AccordionTrigger:a}=e;return o||s(\"Accordion\",!0),r||s(\"AccordionContent\",!0),i||s(\"AccordionItem\",!0),a||s(\"AccordionTrigger\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"This is \",(0,t.jsx)(e.strong,{children:\"NOT\"}),\" an authentication library in the traditional sense. Instead, it's a set of ready-to-use authentication components that you can copy and paste into your projects, whether they use Next.js.\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:\"What do you mean by not a library?\"})}),`\n`,(0,t.jsx)(e.p,{children:\"It means you don't need to install it as a dependency. AuthEz isn't distributed through npm. You simply take the code you need, integrate it into your app, and customize it as you see fit. This approach gives you complete control over both the authentication flow and the user experience.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:\"Think of AuthEz as a toolkit you can adapt to build your own authentication solution, without unnecessary dependencies.\"})}),`\n`,(0,t.jsxs)(e.h2,{id:\"faq\",children:[(0,t.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#faq\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"FAQ\"]}),`\n`,(0,t.jsxs)(o,{type:\"multiple\",children:[(0,t.jsxs)(i,{value:\"faq-1\",children:[(0,t.jsx)(a,{children:(0,t.jsx)(e.p,{children:\"Why copy/paste and not packaged as a dependency?\"})}),(0,t.jsxs)(r,{children:[(0,t.jsx)(e.p,{children:\"The main goal of AuthEz is to give developers full control and flexibility. By copying the code directly into your project, you can customize it to your exact needs.\"}),(0,t.jsx)(e.p,{children:\"This approach avoids issues of tightly coupled styling and implementation that often come with packaged libraries. With AuthEz, the design and flow of authentication can be tailored entirely to your application's requirements.\"})]})]}),(0,t.jsxs)(i,{value:\"faq-2\",children:[(0,t.jsx)(a,{children:(0,t.jsx)(e.p,{children:\"Will this ever be released as an npm package?\"})}),(0,t.jsx)(r,{children:(0,t.jsx)(e.p,{children:`No, AuthEz is designed to be fully customizable by each developer. It's meant\\r\nto be a foundational toolkit rather than a locked-in solution.`})})]}),(0,t.jsxs)(i,{value:\"faq-3\",children:[(0,t.jsx)(a,{children:\"Which frameworks are supported?\"}),(0,t.jsx)(r,{children:(0,t.jsx)(e.p,{children:`AuthEz is designed to work with any framework that supports JavaScript and\\r\nExpress-based servers, including Next.js.`})})]}),(0,t.jsxs)(i,{value:\"faq-4\",children:[(0,t.jsx)(a,{children:\"Can I use this in my project?\"}),(0,t.jsx)(r,{children:(0,t.jsx)(e.p,{children:`Absolutely. AuthEz is free for personal and commercial projects. No\\r\nattribution is required, but feel free to share your projects with us\\u2014 we'd\\r\nlove to see how you use AuthEz!`})})]})]})]})}function p(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}function s(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return v(j);})();\n;return Component;"
  },
  "_id": "docs/index.mdx",
  "_raw": {
    "sourceFilePath": "docs/index.mdx",
    "sourceFileName": "index.mdx",
    "sourceFileDir": "docs",
    "contentType": "mdx",
    "flattenedPath": "docs"
  },
  "type": "Doc",
  "slug": "/docs",
  "slugAsParams": ""
}